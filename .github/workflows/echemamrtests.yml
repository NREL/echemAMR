name: CI_echemamr                                                                                                                                          
on: 
   push:
     branches: [ main ]
   pull_request:
     branches: [ main ]

jobs:
  cputest:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true
    - name: System Dependencies
      run: | 
        sudo apt-get update
        sudo apt-get install -y --no-install-recommends \
        build-essential g++ gfortran libopenmpi-dev openmpi-bin
    - name: Build
      working-directory: ./regression_tests
      run: |
        cd DriftDiffuse1d
        make -j 2 COMP=gnu
        cd ..
        cd openCircuitElectrode
        make -j 2 COMP=gnu
        cd ..
        cd anodeElectrolyte
        make -j 2 COMP=gnu
        cd ..
        cd CEA
        make -j 2 COMP=gnu
    - name: Run
      working-directory: ./regression_tests
      run: |
          cd DriftDiffuse1d
          mpirun -n 2 ./echemAMR3d.gnu.MPI.ex inputs_x
          mpirun -n 2 ./echemAMR3d.gnu.MPI.ex inputs_y
          mpirun -n 2 ./echemAMR3d.gnu.MPI.ex inputs_z
          cd ..
          cd openCircuitElectrode
          mpirun -n 2 ./echemAMR3d.gnu.MPI.ex inputs_x
          mpirun -n 2 ./echemAMR3d.gnu.MPI.ex inputs_y
          mpirun -n 2 ./echemAMR3d.gnu.MPI.ex inputs_z
          cd ..
          cd anodeElectrolyte
          mpirun -n 2 ./echemAMR3d.gnu.MPI.ex inputs_x
          mpirun -n 2 ./echemAMR3d.gnu.MPI.ex inputs_y
          mpirun -n 2 ./echemAMR3d.gnu.MPI.ex inputs_z
          cd ..
          cd CEA
          mpirun -n 2 ./echemAMR3d.gnu.MPI.ex inputs_x
          mpirun -n 2 ./echemAMR3d.gnu.MPI.ex inputs_y
          mpirun -n 2 ./echemAMR3d.gnu.MPI.ex inputs_z
  gputest:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true
    - name: System Dependencies
      run: | 
         CUDA_VERSION=11-2
         sudo apt-key adv --fetch-keys https://developer.download.nvidia.com/compute/cuda/repos/ubuntu1804/x86_64/3bf863cc.pub
         echo "deb https://developer.download.nvidia.com/compute/cuda/repos/ubuntu1804/x86_64 /" \
             | sudo tee /etc/apt/sources.list.d/cuda.list
         sudo apt-get update
         sudo apt-get install -y \
             cuda-command-line-tools-${CUDA_VERSION} \
             cuda-compiler-${CUDA_VERSION}           \
             cuda-cupti-dev-${CUDA_VERSION}          \
             cuda-minimal-build-${CUDA_VERSION}      \
             cuda-nvml-dev-${CUDA_VERSION}           \
             cuda-nvtx-${CUDA_VERSION}               \
             libcurand-dev-${CUDA_VERSION}           \
             libcusolver-dev-${CUDA_VERSION}         \
             libcusparse-dev-${CUDA_VERSION}         \
             libcublas-dev-${CUDA_VERSION}           \
             libcurand-dev-${CUDA_VERSION}
    - name: Build
      working-directory: ./regression_tests
      run: |
        export PATH=/usr/local/nvidia/bin:/usr/local/cuda-11.1/bin:${PATH}
        export LD_LIBRARY_PATH=/usr/local/nvidia/lib:/usr/local/nvidia/lib64:/usr/local/cuda-11.1/lib:${LD_LIBRARY_PATH}
        cd DriftDiffuse1d
        make -j 2 COMP=gnu USE_CUDA=TRUE
        cd ..
        cd openCircuitElectrode
        make -j 2 COMP=gnu USE_CUDA=TRUE
        cd ..
        cd anodeElectrolyte
        make -j 2 COMP=gnu USE_CUDA=TRUE
        cd ..
        cd CEA
        make -j 2 COMP=gnu USE_CUDA=TRUE
